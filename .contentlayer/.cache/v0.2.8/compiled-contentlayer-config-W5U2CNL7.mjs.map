{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from \"contentlayer/source-files\";\n\nconst TOPIC = defineNestedType(() => ({\n  name: \"TOPIC\",\n  fields: {\n    title: {\n      type: \"string\",\n    },\n    description: {\n      type: \"string\",\n    },\n  },\n}));\n\nconst FAQ = defineNestedType(() => ({\n  name: \"FAQ\",\n  fields: {\n    question: {\n      type: \"string\",\n    },\n    answer: {\n      type: \"string\",\n    },\n  },\n}));\n\nconst AGENDA_ITEM = defineNestedType(() => ({\n  name: \"AGENDA_ITEM\",\n  fields: {\n    title: {\n      type: \"string\",\n    },\n    description: {\n      type: \"string\",\n    },\n    time: {\n      type: \"integer\",\n    },\n  },\n}));\n\nexport const Faq = defineDocumentType(() => ({\n  name: \"faq\",\n  filePathPattern: `faq/*.md`,\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    items: {\n      type: \"nested\",\n      of: FAQ,\n    },\n  },\n}));\n\nexport const Agenda = defineDocumentType(() => ({\n  name: \"agenda\",\n  filePathPattern: `agenda/*.md`,\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    items: {\n      type: \"nested\",\n      of: AGENDA_ITEM,\n    },\n  },\n}));\n\nexport const Workshop = defineDocumentType(() => ({\n  name: \"workshop\",\n  filePathPattern: `workshop/*.md`,\n  fields: {\n    flag: {\n      type: \"string\",\n      required: true,\n    },\n    location: {\n      type: \"string\",\n      required: true,\n    },\n    date: {\n      type: \"string\",\n      required: true,\n    },\n    slug: {\n      type: \"string\",\n      required: true,\n    },\n    agenda: {\n      type: \"string\",\n      required: true,\n    },\n    faq: {\n      type: \"string\",\n      required: true,\n    },\n    topics: {\n      type: \"nested\",\n      of: TOPIC,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Faq, Agenda, Faq, Workshop],\n});\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,IAAM,QAAQ,iBAAiB,OAAO;AAAA,EACpC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,IACR;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,EACF;AACF,EAAE;AAEF,IAAM,MAAM,iBAAiB,OAAO;AAAA,EAClC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,UAAU;AAAA,MACR,MAAM;AAAA,IACR;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,IACR;AAAA,EACF;AACF,EAAE;AAEF,IAAM,cAAc,iBAAiB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,IACR;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,IACR;AAAA,EACF;AACF,EAAE;AAEK,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,EACF;AACF,EAAE;AAEK,IAAM,SAAS,mBAAmB,OAAO;AAAA,EAC9C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,EACF;AACF,EAAE;AAEK,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,KAAK;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,KAAK,QAAQ,KAAK,QAAQ;AAC5C,CAAC;",
  "names": []
}
